name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Check syntax
      run: |
        uv run python -m py_compile chartmogul_mcp/api_client.py
        uv run python -m py_compile chartmogul_mcp/utils.py
        uv run python -m py_compile chartmogul_mcp/mcp_server.py
        uv run python -m py_compile tests/test_api_client.py
        uv run python -m py_compile tests/test_utils.py
        uv run python -m py_compile tests/test_mcp_server.py
        uv run python -m py_compile tests/test_integration.py
        uv run python -m py_compile tests/test_standalone.py

    - name: Run standalone tests (no external deps)
      run: |
        uv run python tests/test_standalone.py

    - name: Run linting with ruff
      run: |
        uv run ruff check chartmogul_mcp/ tests/

    - name: Run code formatting check with black
      run: |
        uv run black --check chartmogul_mcp/ tests/

    - name: Run type checking with mypy
      run: |
        uv run mypy chartmogul_mcp/ --ignore-missing-imports

    - name: Run pytest with coverage
      run: |
        uv run pytest tests/ --cov=chartmogul_mcp --cov-report=term-missing --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: ./coverage.xml
        fail_ci_if_error: false